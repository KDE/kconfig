// This file is generated by kconfig_compiler_kf6 from test9.kcfg.
// All changes you do to this file will be lost.
#ifndef TEST9_H
#define TEST9_H

#include <kconfigskeleton.h>
#include <QCoreApplication>
#include <QDebug>

#include <qdir.h>

class Test9 : public KConfigSkeleton
{
  public:

    Test9( const QString & transport, const QString & folder );
    ~Test9() override;

    /**
      Set MyStringList
    */
    void setMyStringList( const QStringList & v )
    {
      if (!isMyStringListImmutable())
        mMyStringList = v;
    }

    /**
      Get MyStringList
    */
    QStringList myStringList() const
    {
      return mMyStringList;
    }

    /**
      Is MyStringList Immutable
    */
    bool isMyStringListImmutable() const
    {
      return isImmutable( QStringLiteral( "MyStringList" ) );
    }

    /**
      Set This is a list of paths
    */
    void setMyPathList( const QStringList & v )
    {
      if (!isMyPathListImmutable())
        mMyPathList = v;
    }

    /**
      Get This is a list of paths
    */
    QStringList myPathList() const
    {
      return mMyPathList;
    }

    /**
      Is This is a list of paths Immutable
    */
    bool isMyPathListImmutable() const
    {
      return isImmutable( QStringLiteral( "MyPathList" ) );
    }

    /**
      Set This is an additional test for PathList
    */
    void setMyPathsList2( const QStringList & v )
    {
      if (!isMyPathsList2Immutable())
        mMyPathsList2 = v;
    }

    /**
      Get This is an additional test for PathList
    */
    QStringList myPathsList2() const
    {
      return mMyPathsList2;
    }

    /**
      Is This is an additional test for PathList Immutable
    */
    bool isMyPathsList2Immutable() const
    {
      return isImmutable( QStringLiteral( "MyPathsList2" ) );
    }

  protected:
  public:
    QString mParamtransport;
    QString mParamfolder;

    // MyOptionsXX
    QStringList mMyStringList;
    QStringList mMyPathList;
    QStringList mMyPathsList2;

  private:
};

#endif

