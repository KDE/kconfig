// This file is generated by kconfig_compiler_kf6 from test_dpointer.kcfg.
// All changes you do to this file will be lost.
#ifndef TESTDPOINTER_H
#define TESTDPOINTER_H

#include <kconfigskeleton.h>
#include <QCoreApplication>
#include <QDebug>

class TestDPointerPrivate;

class TestDPointer : public KConfigSkeleton
{
  public:
    class EnumDestination
    {
      public:
      enum type { standardDestination, askDestination, argl1, argl2, argl3, COUNT };
    };

    static TestDPointer *self();
    ~TestDPointer() override;

    /**
      Set Enable automatic saving of calendar
    */
    static
    void setAutoSave( bool v );

    /**
      Get Enable automatic saving of calendar
    */
    static
    bool autoSave();

    /**
      Is Enable automatic saving of calendar Immutable
    */
    static
    bool isAutoSaveImmutable();

    /**
      Get Item object corresponding to AutoSave()
    */
    ItemBool *autoSaveItem();

    /**
      Set Auto Save Interval
    */
    static
    void setAutoSaveInterval( int v );

    /**
      Get Auto Save Interval
    */
    static
    int autoSaveInterval();

    /**
      Is Auto Save Interval Immutable
    */
    static
    bool isAutoSaveIntervalImmutable();

    /**
      Get Item object corresponding to AutoSaveInterval()
    */
    ItemInt *autoSaveIntervalItem();

    /**
      Set Confirm deletes
    */
    static
    void setConfirm( bool v );

    /**
      Get Confirm deletes
    */
    static
    bool confirm();

    /**
      Is Confirm deletes Immutable
    */
    static
    bool isConfirmImmutable();

    /**
      Get Item object corresponding to Confirm()
    */
    ItemBool *confirmItem();

    /**
      Set Archive File
    */
    static
    void setArchiveFile( const QString & v );

    /**
      Get Archive File
    */
    static
    QString archiveFile();

    /**
      Is Archive File Immutable
    */
    static
    bool isArchiveFileImmutable();

    /**
      Get Item object corresponding to ArchiveFile()
    */
    ItemString *archiveFileItem();

    /**
      Set New Events/Todos Should
    */
    static
    void setDestination( int v );

    /**
      Get New Events/Todos Should
    */
    static
    int destination();

    /**
      Is New Events/Todos Should Immutable
    */
    static
    bool isDestinationImmutable();

    /**
      Get Item object corresponding to Destination()
    */
    ItemEnum *destinationItem();

    /**
      Set Hour Size
    */
    static
    void setHourSize( int v );

    /**
      Get Hour Size
    */
    static
    int hourSize();

    /**
      Is Hour Size Immutable
    */
    static
    bool isHourSizeImmutable();

    /**
      Get Item object corresponding to HourSize()
    */
    ItemInt *hourSizeItem();

    /**
      Set Time range selection in agenda view starts event editor
    */
    static
    void setSelectionStartsEditor( bool v );

    /**
      Get Time range selection in agenda view starts event editor
    */
    static
    bool selectionStartsEditor();

    /**
      Is Time range selection in agenda view starts event editor Immutable
    */
    static
    bool isSelectionStartsEditorImmutable();

    /**
      Get Item object corresponding to SelectionStartsEditor()
    */
    ItemBool *selectionStartsEditorItem();

    /**
      Set SelectedPlugins
    */
    static
    void setSelectedPlugins( const QStringList & v );

    /**
      Get SelectedPlugins
    */
    static
    QStringList selectedPlugins();

    /**
      Is SelectedPlugins Immutable
    */
    static
    bool isSelectedPluginsImmutable();

    /**
      Get Item object corresponding to SelectedPlugins()
    */
    ItemStringList *selectedPluginsItem();

    /**
      Set Highlight color
    */
    static
    void setHighlightColor( const QColor & v );

    /**
      Get Highlight color
    */
    static
    QColor highlightColor();

    /**
      Is Highlight color Immutable
    */
    static
    bool isHighlightColorImmutable();

    /**
      Get Item object corresponding to HighlightColor()
    */
    ItemColor *highlightColorItem();

    /**
      Set Agenda view background color
    */
    static
    void setAgendaBgColor( const QColor & v );

    /**
      Get Agenda view background color
    */
    static
    QColor agendaBgColor();

    /**
      Is Agenda view background color Immutable
    */
    static
    bool isAgendaBgColorImmutable();

    /**
      Get Item object corresponding to AgendaBgColor()
    */
    ItemColor *agendaBgColorItem();

    /**
      Set Time bar
    */
    static
    void setTimeBarFont( const QFont & v );

    /**
      Get Time bar
    */
    static
    QFont timeBarFont();

    /**
      Is Time bar Immutable
    */
    static
    bool isTimeBarFontImmutable();

    /**
      Get Item object corresponding to TimeBarFont()
    */
    ItemFont *timeBarFontItem();

  protected:
    TestDPointer();
    friend class TestDPointerHelper;

  private:
    TestDPointerPrivate *d;
};

#endif

