// This file is generated by kconfig_compiler_kf6 from test17.kcfg.
// All changes you do to this file will be lost.
#ifndef TEST17_H
#define TEST17_H

#include <kconfigskeleton.h>
#include <QCoreApplication>
#include <QDebug>
#include <qqmlintegration.h>

class QQmlEngine;
class QJSEngine;

class Test17 : public KConfigSkeleton
{
  Q_OBJECT
  QML_ELEMENT
  QML_SINGLETON
  public:

    static Test17 *self();
    static Test17 *create(QQmlEngine *, QJSEngine *);
    ~Test17() override;

    Q_PROPERTY(QUrl picturesDir READ picturesDir CONSTANT)
    Q_PROPERTY(bool isPicturesDirImmutable READ isPicturesDirImmutable CONSTANT)
    /**
      Get picturesDir
    */
    static
    QUrl picturesDir()
    {
      return self()->mPicturesDir;
    }

    /**
      Is picturesDir Immutable
    */
    static
    bool isPicturesDirImmutable()
    {
      return self()->isImmutable( QStringLiteral( "picturesDir" ) );
    }

    /**
      Set brightness
    */
    static
    void setBrightness( double v )
    {
      if (v != self()->mBrightness && !self()->isBrightnessImmutable()) {
        self()->mBrightness = v;
        Q_EMIT self()->brightnessChanged();
      }
    }

    Q_PROPERTY(double brightness READ brightness WRITE setBrightness NOTIFY brightnessChanged)
    Q_PROPERTY(bool isBrightnessImmutable READ isBrightnessImmutable CONSTANT)
    Q_PROPERTY(double defaultBrightnessValue READ defaultBrightnessValue CONSTANT)
    /**
      Get brightness
    */
    static
    double brightness()
    {
      return self()->mBrightness;
    }

    /**
      Is brightness Immutable
    */
    static
    bool isBrightnessImmutable()
    {
      return self()->isImmutable( QStringLiteral( "brightness" ) );
    }

    /**
      Get brightness default value
    */
    static
    double defaultBrightnessValue()
    {
        return defaultBrightnessValue_helper();
    }


    enum {
      signalBrightnessChanged = 1
    };

  Q_SIGNALS:
    void brightnessChanged();

  private:
    void itemChanged(quint64 signalFlag);

  protected:
    Test17();
    friend class Test17Helper;


    // kamoso
    QUrl mPicturesDir;
    static QUrl defaultPicturesDirValue_helper();
    double mBrightness;
    static double defaultBrightnessValue_helper();

  private:
};

#endif

